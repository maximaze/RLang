}
# if문
if(A >=40) {
cat("x*y는 40보다 크거나 같다.")
}
if(A >=40) {
cat("x*y는 40보다 크거나 같다.")
}
else {
if(x*y <=40) { # 참
cat("x*y는 40보다 크거나 같다.")
}
cat{"x*y는 40보다 크거나 같지 않다."}
if(x*y <=40) { # 참
cat("x*y는 40보다 크거나 같다.")
}
else { # 거짓
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
}
else if(z >= x*y) {
else{ # 거짓
else { # 거짓
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
} else if(z >= x*y) {
cat("x*y는 40보다 크거나 같다.")
} else { # 거짓
cat{"x*y는 40보다 크거나 같지 않다."}
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
} else if(z >= x*y) {
cat("x*y는 40보다 크거나 같다.")
} else { # 거짓
cat{"x*y는 40보다 크거나 같지 않다."}
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
} else if(z >= x*y) {
cat("x*y는 40보다 크거나 같다.")
}
cat("x*y는 40보다 크다.")
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
} else if(z >= x*y) {
cat("x*y는 40보다 크거나 같다.")
} else { # 거짓
cat{"x*y는 40보다 크거나 같지 않다."}
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
} else if(z >= x*y) {
cat("x*y는 40보다 크거나 같다.")
} else { # 거짓
cat{"x*y는 40보다 크거나 같지 않다."}
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
} else if(z >= x*y) {
cat("x*y는 40보다 크거나 같다.")
} else { # 거짓
cat{"x*y는 40보다 크거나 같지 않다."}
#
if(z > x*y) { # 참
cat("x*y는 40보다 크다.")
} else if(z >= x*y) {
cat("x*y는 40보다 크거나 같다.")
} else { # 거짓
cat{"x*y는 40보다 크거나 같지 않다."}
cat("x*y는 40보다 크거나 같지 않다.")
result <- ifelse(score >= 90, "우수","노력")
result
# ifelse() 함수
# 자바의 3항 연산자와 비슷
# ifelse(조건식, 참, 거짓)
score <- 80
result <- ifelse(score >= 90, "우수","노력")
result
result <- ifelse(score >= 90, "매우우수",
ifelse(score >= 80, "우수",
ifelse(score >= 70, "보통","노력")))
result
# ifelse() 함수
# 자바의 3항 연산자와 비슷
# ifelse(조건식, 참, 거짓)
score <- 90
result <- ifelse(score >= 90, "매우우수",
ifelse(score >= 80, "우수",
ifelse(score >= 70, "보통","노력")))
result
#
result <- switch("name", id="hong", pwd="1234", age=44, name="홍길동")
result
#
result <- switch("name", id="hong", pwd="1234", age=44, name="홍길동")
result
cond <- "?"
cond <- "b"
switch(cond,
a="1등급",
b="2등급",
c="3등급")
ncond <- 3
ncond <- "3
switch(ncond
1="1등급",
ncond <- "3"
switch(ncond
1="1등급",
switch(ncond,
1="1등급",
ncond <- 3
switch(ncond,
1="1등급",
switch(ncond,
"1"="1등급",
"2"="2등급",
"3"="3등급")
ncond <- 3
switch(ncond,
"1"="1등급",
"2"="2등급",
"3"="3등급")
# 백터
name <- c("kim","lee","choi","park")
nname <- which(name == "choi")
nname
# 백터
name <- c("kim","lee","choi","park")
# 해당하는 백터의 인덱스를 리턴
nname <- which(name == "choi")
nname
# 해당하는 데이터가 백터에 없으면 0을 리턴
nname <- which(name == "cho")
nname # 0
# 데이터 프레임에서 which() 함수
no <- n(1:5)
# 데이터 프레임에서 which() 함수
no <- c(1:5)
name <- c("kim","lee","choi","park","cho")
exam <- data.frame(학번=no, 이름=name, 성적=score)
exam
nexam <- which(exam$이름 == "park")
nexam
class(exam$이름)
# 백터인 exam$이름에서 'park'의 인덱스를 리턴
nexam <- which(exam$이름 == 'park')
nexam # 4
# 'park'의 정보
exam[nexam,]
# 1부터 10까지으 백터에서
# 짝수이면 넘기고, 홀수 값만 출력
i <- c(1:10)
i
print(n) # 홀수
if(n %% 2 == 0) { # 짝수
next # 다시 for()문으로 이동
} else {
print(n) # 홀수
}
# 1부터 10까지으 백터에서
# 짝수이면 넘기고, 홀수 값만 출력
i <- c(1:10)
i
for(n in i){ # 10번 반복: 백터에서 하나씩 꺼내서  n에 대입
if(n %% 2 == 0) { # 짝수
next # 다시 for()문으로 이동
} else {
print(n) # 홀수
}
}
# 1부터 10까지의 수에서 홀수의 합
i <- c(1:10)
i
for(n in i){
if(n %% 2 == 1) {
next
} else {
print(n)
}
}
sum ++
next
if(n %% 2 == 0) {
next
} else {
print(n)
}
for(n in i){
if(n %% 2 == 0) {
next
} else {
print(n)
}
}
for(n in i){
if(n %% 2 == 0) {
sum = n+sum
next
} else {
print(n)
}
}
sum = (n+sum)
for(n in i){
if(n %% 2 == 0) {
next
sum = (n+sum)
} else {
print(n)
}
}
print(sum)
sum <- 0
for(n in i){
if(n %% 2 == 0) {
next
} sum = (n+sum)
if(n %% 2 == 0) {
next
sum = (n+sum)
} else {
print(sum)
}
for(n in i){
if(n %% 2 == 0) {
next
sum = (n+sum)
} else {
print(sum)
}
}
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
print(sum)
}
}
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
} else {
print(sum)
}
}
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
print(sum)
}
}
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum)
}
}
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum\n)
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum"\n")
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum,"\n")
}
}
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum,"\n")
}
}
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum,"\n")
}
}
sum <- 0
for(n in i){
if(n %% 2 == 0) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum,"\n")
}
}
sum <- 0
for(n in i){
if(n %% 2 == 1) {
sum = (n+sum)
next
} else {
cat(n,"까지의 홀수의 합",sum,"\n")
}
}
# 강사님이 한거
odd <- 0
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
cat("1부터 10까지의 홀수의 합?", odd)
for(n in i){
if(n %% 2 == 1) {
sum = n+sum
next
} else {
cat(n,"까지의 홀수의 합",sum,"\n")
}
}
sum <- 0
for(n in i){
if(n %% 2 == 1) {
sum = n+sum
next
} else {
cat(n,"까지의 홀수의 합",sum,"\n")
}
}
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
cat("1부터 10까지의 홀수의 합?", odd)
# 강사님이 한거
odd <- 0
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
cat("1부터 10까지의 홀수의 합?", odd)
# 1부터 10까지의 수에서 짝수의 합
even <- 0
for(x in seq(2,10,2)){
even <- even+x
cat(x, even, "\n")
}
cat("1부터 10까지 짝수의 합?", even)
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
# 1부터 10까지의 수에서 홀수을 합을 구한 결과로 짝수의 합을 구하라
odd <- 0
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
cat("1부터 10까지 홀수의 합?",odd)
x <- ?
even <- odd + x
x <- ?
even <- odd + x
# 1부터 10까지의 수에서 홀수의 합을 구한 결과로 짝수의 합을 구하라
odd <- 0
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
x <- odd
even <- odd + x
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
cat("1부터 10까지 홀수의 합?",odd)
# 1부터 10까지의 수에서 홀수의 합을 구한 결과로 짝수의 합을 구하라
odd <- 0
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
# 1부터 10까지의 수에서 홀수의 합을 구한 결과로 짝수의 합을 구하라
odd <- 0
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
cat("1부터 10까지 홀수의 합?",odd)
for(x in seq(2,odd,2)){
even <- even+x
cat(odd, even,"\n")
}
cat("1부터 10까지의 짝수의 합?",even)
# 1부터 10까지의 수에서 짝수의 합
even <- 0
for(x in seq(2,10,2)){
even <- even+x
cat(x, even, "\n")
}
cat("1부터 10까지 짝수의 합?", even)
# 1부터 10까지의 수에서 홀수의 합을 구한 결과로 짝수의 합을 구하라
odd <- 0
for(x in seq(1,10,2)){
odd <- odd+x
cat(x,odd,"\n")
}
cat("1부터 10까지 홀수의 합?",odd)
for(x in seq(2,odd,2)){
even <- even+x
cat(odd, even,"\n")
}
cat("1부터 10까지의 짝수의 합?",even)
cat("2부터",odd "까지의 짝수의 합?",even)
cat("2부터",odd, "까지의 짝수의 합?",even)
cat("1부터",odd, "까지의 짝수의 합?",even)
# 데이터 프레임에서  which() 함수
no <- c(1:5)
name <- c("kim","lee","choi","park","cho")
score <- c(10,20,30,40,50)
exam <- data.frame(학번=no, 이름=name, 성적=score)
exam
exam$이름
class(exam$이름)
# exam에서 name추출
examcols <- c(names(exam))
examcols
for(col in examcols){
print(col)
}
# while() 함수
# while(조건){...}
i=0
while(i<10){
i <- i+1
print(i)
}
# 1부터 10까지의 합을 구하라
s <- 0
n <- 0
while(n<10){
n <- n+1
s <- s+n
print (n,s)
}
# 1부터 10까지의 합을 구하라
s <- 0
n <- 0
while(n<10){
n <- n+1
s <- s+n
print(n,s)
}
cat(n,s)
cat("1부터 10까지의 합=",s)
# 1부터 10까지 더하는 공식을 이용하여 합을 구하라
n <- 10
sn <- n * (n+1) / 2
cat("# 1부터", n, "까지의 합을 구하라", sn)
cat("# 1부터", n, "까지의 합=", sn)
# 50부터 100까지 더하는 공식을 이용하여 합을 구하라
n <- 100
sn <- n * (n+51) / 2
cat("# 50부터",n,"까지의 합=", sn)
# 50부터 100까지 더하는 공식을 이용하여 합을 구하라
n <- 100
sn <- n * (n+50) / 2
cat("# 50부터",n,"까지의 합=", sn)
# 50부터 100까지 더하는 공식을 이용하여 합을 구하라
n <- 100
sn <- 50+(n * (n+1) / 2)
cat("# 50부터",n,"까지의 합=", sn)
# 50부터 100까지 더하는 공식을 이용하여 합을 구하라
n1 <- 49
n2 <- 100
s1 <- n1 * (n1+1) / 2
s2 <- n2 * (n2+1) / 2
cat("# 1부터",n1,"까지의 합=", s1)
cat("# 1부터",n2,"까지의 합=", s2)
cat("#", n1+1,"부터",n2,"끼지의 합=", s2-s1)
# 검증
# 50부터 100까지의 합을 구하라
s <- 0
n <- 50
while(n <= 100){
s <- s+n
cat(n,s,"\n")
n <- n+1
}
cat("# 50부터 100까지 합은=",s ) # 3825
while(n <= 100)
s <- s+n
cat(n,s,"\n")
n <- n+1
cat("# 50부터 100까지 합은=",s) # 3825
while(n <= 100)
